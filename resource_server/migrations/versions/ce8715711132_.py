"""empty message

Revision ID: ce8715711132
Revises: 
Create Date: 2025-03-02 20:37:21.851847

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ce8715711132'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('animes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), nullable=False),
    sa.Column('rating', sa.NUMERIC(precision=3, scale=2), nullable=False),
    sa.Column('mal_ranking', sa.INTEGER(), nullable=False),
    sa.Column('members', sa.BIGINT(), server_default=sa.text('0'), nullable=False),
    sa.Column('synposis', sa.TEXT(), nullable=False),
    sa.CheckConstraint('mal_ranking >= 0', name='check_ranking_positive'),
    sa.CheckConstraint('members >= 0', name='check_members_positive'),
    sa.CheckConstraint('rating >= 0', name='check_rating_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('animes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_animes_title'), ['title'], unique=True)

    op.create_table('genres',
    sa.Column('id', sa.SMALLINT(), autoincrement=True, nullable=False),
    sa.Column('_name', sa.VARCHAR(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('genres', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_genres__name'), ['_name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('_alias', sa.VARCHAR(length=64), nullable=True),
    sa.Column('email', sa.VARCHAR(length=320), nullable=False),
    sa.Column('pfp', sa.VARCHAR(length=256), nullable=True),
    sa.Column('pw_hash', postgresql.BYTEA(length=256), nullable=False),
    sa.Column('pw_salt', postgresql.BYTEA(length=64), nullable=False),
    sa.Column('aura', sa.BIGINT(), nullable=True),
    sa.Column('total_posts', sa.INTEGER(), nullable=True),
    sa.Column('total_comments', sa.INTEGER(), nullable=True),
    sa.Column('time_joined', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted', sa.BOOLEAN(), server_default=sa.text('false'), nullable=False),
    sa.Column('time_deleted', postgresql.TIMESTAMP(), nullable=True),
    sa.CheckConstraint("email ~*'^[A-Za-z0-9._%%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'", name='ck_users_email_regex'),
    sa.CheckConstraint('LENGTH(username) > 5', name='ck_users_username_length'),
    sa.CheckConstraint('_alias IS NULL OR LENGTH(_alias) > 5', name='ck_users_alias_length'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('anime_genres',
    sa.Column('anime_id', sa.INTEGER(), nullable=False),
    sa.Column('genre_id', sa.SMALLINT(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
    sa.PrimaryKeyConstraint('anime_id', 'genre_id', name='pk_anime_genres')
    )
    op.create_table('anime_subscriptions',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('anime_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'anime_id', name='pk_anime_subscriptions')
    )
    op.create_table('forums',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('_name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('anime', sa.INTEGER(), nullable=True),
    sa.Column('color_theme', sa.SMALLINT(), server_default='1', nullable=False),
    sa.Column('pfp', sa.VARCHAR(length=128), nullable=True),
    sa.Column('description', sa.VARCHAR(length=256), nullable=True),
    sa.Column('subscribers', sa.BIGINT(), nullable=False),
    sa.Column('posts', sa.BIGINT(), nullable=False),
    sa.Column('highlight_post_1', sa.BIGINT(), nullable=True),
    sa.Column('highlight_post_2', sa.BIGINT(), nullable=True),
    sa.Column('highlight_post_3', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('admin_count', sa.SMALLINT(), nullable=True),
    sa.CheckConstraint('admin_count > 0', name='check_atleast_1_admin'),
    sa.CheckConstraint('color_theme > 0 AND color_theme < 20', name='limit_color_themes'),
    sa.CheckConstraint('posts >= 0', name='check_posts_value'),
    sa.CheckConstraint('subscribers >= 0', name='check_subs_values'),
    sa.ForeignKeyConstraint(['anime'], ['animes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('_name', 'anime', name='uq_name_anime')
    )
    with op.batch_alter_table('forums', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_forums__name'), ['_name'], unique=True)
        batch_op.create_index(batch_op.f('ix_forums_anime'), ['anime'], unique=False)

    op.create_table('password_recovery_tokens',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('expiry', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('url_hash', postgresql.BYTEA(length=512), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('password_recovery_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_password_recovery_tokens_expiry'), ['expiry'], unique=False)
        batch_op.create_index(batch_op.f('ix_password_recovery_tokens_url_hash'), ['url_hash'], unique=True)

    op.create_table('posts',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.BIGINT(), nullable=False),
    sa.Column('forum', sa.VARCHAR(length=128), nullable=False),
    sa.Column('score', sa.INTEGER(), nullable=True),
    sa.Column('total_comments', sa.INTEGER(), nullable=True),
    sa.Column('title', sa.VARCHAR(length=64), nullable=False),
    sa.Column('body_text', sa.TEXT(), nullable=False),
    sa.Column('flair', sa.VARCHAR(length=16), nullable=True),
    sa.Column('closed', sa.BOOLEAN(), nullable=True),
    sa.Column('time_posted', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('saves', sa.INTEGER(), nullable=True),
    sa.Column('reports', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('LENGTH(title) > 8', name='check_title_length_over_8'),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_posts_author_id'), ['author_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_flair'), ['flair'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_title'), ['title'], unique=False)

    op.create_table('stream_links',
    sa.Column('anime_id', sa.INTEGER(), nullable=False),
    sa.Column('url', sa.VARCHAR(length=256), nullable=False),
    sa.Column('website', sa.VARCHAR(length=64), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.PrimaryKeyConstraint('anime_id', 'url', name='pk_stream_links')
    )
    op.create_table('user_tickets',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('time_raised', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('description', sa.VARCHAR(length=512), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('comments',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('parent_forum', sa.INTEGER(), nullable=False),
    sa.Column('time_created', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('body', sa.VARCHAR(length=512), nullable=False),
    sa.Column('parent_post', sa.BIGINT(), nullable=False),
    sa.Column('parent_thread', sa.BIGINT(), nullable=True),
    sa.Column('replying_to', sa.BIGINT(), nullable=True),
    sa.Column('score', sa.INTEGER(), nullable=True),
    sa.Column('reports', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('reports >= 0', name='check_reports_value'),
    sa.ForeignKeyConstraint(['parent_post'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['parent_thread'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['replying_to'], ['comments.id'], ),
    sa.PrimaryKeyConstraint('id', name='pk_comments')
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comments_parent_post'), ['parent_post'], unique=False)

    op.create_table('forum_admins',
    sa.Column('forum_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('role', postgresql.ENUM('admin', 'super', 'owner', name='ADMIN_ROLES'), server_default=sa.text("'admin'"), nullable=False),
    sa.ForeignKeyConstraint(['forum_id'], ['forums.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('forum_id', 'user_id', name='pk_forum_admins')
    )
    op.create_table('forum_rules',
    sa.Column('forum_id', sa.INTEGER(), nullable=False),
    sa.Column('rule_number', sa.SMALLINT(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=32), nullable=False),
    sa.Column('body', sa.VARCHAR(length=128), server_default='No additional description provided for this rule.', nullable=True),
    sa.Column('author', sa.INTEGER(), nullable=False),
    sa.Column('time_created', postgresql.TIMESTAMP(), nullable=False),
    sa.CheckConstraint('rule_number BETWEEN 0 AND 5', name='enforce_forum_rules_range'),
    sa.ForeignKeyConstraint(['forum_id'], ['forums.id'], ),
    sa.PrimaryKeyConstraint('forum_id', 'rule_number', name='pk_forum_rules'),
    sa.UniqueConstraint('rule_number')
    )
    op.create_table('forum_subscribers',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('forum_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['forum_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'forum_id', name='pk_forum_subscribers')
    )
    op.create_table('forum_subscriptions',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('forum_id', sa.INTEGER(), nullable=False),
    sa.Column('time_subscribed', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['forum_id'], ['forums.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'forum_id', name='pk_forum_subscriptions')
    )
    op.create_table('post_reports',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('post_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'post_id', name='pk_post_reports')
    )
    op.create_table('post_saves',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('post_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'post_id', name='pk_post_saves')
    )
    op.create_table('post_votes',
    sa.Column('voter_id', sa.BIGINT(), nullable=False),
    sa.Column('post_id', sa.BIGINT(), nullable=False),
    sa.Column('vote', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['voter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('voter_id', 'post_id', name='pk_post_votes')
    )
    op.create_table('comment_reports',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('comment_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'comment_id', name='pk_comment_reports')
    )
    op.create_table('comment_votes',
    sa.Column('voter_id', sa.BIGINT(), nullable=False),
    sa.Column('comment_id', sa.BIGINT(), nullable=False),
    sa.Column('vote', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['voter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('voter_id', 'comment_id', name='pk_comment_votes')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_votes')
    op.drop_table('comment_reports')
    op.drop_table('post_votes')
    op.drop_table('post_saves')
    op.drop_table('post_reports')
    op.drop_table('forum_subscriptions')
    op.drop_table('forum_subscribers')
    op.drop_table('forum_rules')
    op.drop_table('forum_admins')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comments_parent_post'))

    op.drop_table('comments')
    op.drop_table('user_tickets')
    op.drop_table('stream_links')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_posts_title'))
        batch_op.drop_index(batch_op.f('ix_posts_flair'))
        batch_op.drop_index(batch_op.f('ix_posts_author_id'))

    op.drop_table('posts')
    with op.batch_alter_table('password_recovery_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_password_recovery_tokens_url_hash'))
        batch_op.drop_index(batch_op.f('ix_password_recovery_tokens_expiry'))

    op.drop_table('password_recovery_tokens')
    with op.batch_alter_table('forums', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forums_anime'))
        batch_op.drop_index(batch_op.f('ix_forums__name'))

    op.drop_table('forums')
    op.drop_table('anime_subscriptions')
    op.drop_table('anime_genres')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('genres', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_genres__name'))

    op.drop_table('genres')
    with op.batch_alter_table('animes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_animes_title'))

    op.drop_table('animes')
    # ### end Alembic commands ###
