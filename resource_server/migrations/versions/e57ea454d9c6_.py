"""empty message

Revision ID: e57ea454d9c6
Revises: 
Create Date: 2025-02-19 22:12:00.226439

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e57ea454d9c6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('forums',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('_name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('color_theme', sa.SMALLINT(), server_default='1', nullable=False),
    sa.Column('pfp', sa.VARCHAR(length=128), nullable=True),
    sa.Column('description', sa.VARCHAR(length=256), nullable=True),
    sa.Column('subscribers', sa.BIGINT(), nullable=False),
    sa.Column('posts', sa.BIGINT(), nullable=False),
    sa.Column('highlight_post_1', sa.BIGINT(), nullable=True),
    sa.Column('highlight_post_2', sa.BIGINT(), nullable=True),
    sa.Column('highlight_post_3', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('admin_count', sa.SMALLINT(), nullable=True),
    sa.CheckConstraint('admin_count > 0', name=op.f('ck_forums_check_atleast_1_admin')),
    sa.CheckConstraint('color_theme > 0 AND color_theme < 20', name=op.f('ck_forums_limit_color_themes')),
    sa.CheckConstraint('posts >= 0', name=op.f('ck_forums_check_posts_value')),
    sa.CheckConstraint('subscribers >= 0', name=op.f('ck_forums_check_subs_values')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forums'))
    )
    with op.batch_alter_table('forums', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_forums__name'), ['_name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('_alias', sa.VARCHAR(length=64), nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), nullable=False),
    sa.Column('pfp', sa.VARCHAR(length=256), nullable=True),
    sa.Column('pw_hash', postgresql.BYTEA(length=256), nullable=False),
    sa.Column('pw_salt', postgresql.BYTEA(length=64), nullable=False),
    sa.Column('aura', sa.BIGINT(), nullable=True),
    sa.Column('total_posts', sa.INTEGER(), nullable=True),
    sa.Column('total_comments', sa.INTEGER(), nullable=True),
    sa.Column('time_joined', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(), nullable=True),
    sa.CheckConstraint("email ~*'^[A-Za-z0-9._%%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'", name=op.f('ck_users_ck_users_email_regex')),
    sa.CheckConstraint('LENGTH(username) > 5', name=op.f('ck_users_ck_users_username_length')),
    sa.CheckConstraint('_alias IS NULL OR LENGTH(_alias) > 5', name=op.f('ck_users_ck_users_alias_length')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('forum_rules',
    sa.Column('forum_id', sa.INTEGER(), nullable=False),
    sa.Column('rule_number', sa.SMALLINT(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=32), nullable=False),
    sa.Column('body', sa.VARCHAR(length=128), server_default='No additional description provided for this rule.', nullable=True),
    sa.Column('author', sa.INTEGER(), nullable=False),
    sa.Column('time_created', postgresql.TIMESTAMP(), nullable=False),
    sa.CheckConstraint('rule_number < 6', name=op.f('ck_forum_rules_check_max_forum_rules')),
    sa.ForeignKeyConstraint(['forum_id'], ['forums.id'], name=op.f('fk_forum_rules_forum_id_forums')),
    sa.PrimaryKeyConstraint('forum_id', 'rule_number', name='pk_forum_rules'),
    sa.UniqueConstraint('rule_number', name=op.f('uq_forum_rules_rule_number'))
    )
    op.create_table('posts',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.BIGINT(), nullable=False),
    sa.Column('author_uname', sa.VARCHAR(length=64), nullable=False),
    sa.Column('forum', sa.VARCHAR(length=128), nullable=False),
    sa.Column('score', sa.INTEGER(), nullable=True),
    sa.Column('total_comments', sa.INTEGER(), nullable=True),
    sa.Column('title', sa.VARCHAR(length=64), nullable=False),
    sa.Column('body_text', sa.TEXT(), nullable=False),
    sa.Column('flair', sa.VARCHAR(length=16), nullable=True),
    sa.Column('closed', sa.BOOLEAN(), nullable=True),
    sa.Column('time_posted', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('saves', sa.INTEGER(), nullable=True),
    sa.Column('reports', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('LENGTH(title) > 8', name=op.f('ck_posts_check_title_length_over_8')),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_posts_author_id_users')),
    sa.ForeignKeyConstraint(['author_uname'], ['users.username'], name=op.f('fk_posts_author_uname_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_posts'))
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_posts_author_id'), ['author_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_author_uname'), ['author_uname'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_flair'), ['flair'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_title'), ['title'], unique=False)

    op.create_table('user_subscriptions',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('forum_id', sa.INTEGER(), nullable=False),
    sa.Column('time_subscribed', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['forum_id'], ['forums.id'], name=op.f('fk_user_subscriptions_forum_id_forums')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_subscriptions_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'forum_id', name='pk_forum_subscriptions')
    )
    op.create_table('comments',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('parent_forum', sa.INTEGER(), nullable=False),
    sa.Column('time_created', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('body', sa.VARCHAR(length=512), nullable=False),
    sa.Column('parent_post', sa.BIGINT(), nullable=False),
    sa.Column('parent_thread', sa.BIGINT(), nullable=True),
    sa.Column('replying_to', sa.BIGINT(), nullable=True),
    sa.Column('score', sa.INTEGER(), nullable=True),
    sa.Column('reports', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('reports >= 0', name=op.f('ck_comments_check_reports_value')),
    sa.ForeignKeyConstraint(['parent_post'], ['posts.id'], name=op.f('fk_comments_parent_post_posts')),
    sa.ForeignKeyConstraint(['parent_thread'], ['comments.id'], name=op.f('fk_comments_parent_thread_comments')),
    sa.ForeignKeyConstraint(['replying_to'], ['comments.id'], name=op.f('fk_comments_replying_to_comments')),
    sa.PrimaryKeyConstraint('id', name='pk_comments')
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comments_parent_post'), ['parent_post'], unique=False)

    op.create_table('post_votes',
    sa.Column('voter_id', sa.BIGINT(), nullable=False),
    sa.Column('post_id', sa.BIGINT(), nullable=False),
    sa.Column('vote', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_post_votes_post_id_posts')),
    sa.ForeignKeyConstraint(['voter_id'], ['users.id'], name=op.f('fk_post_votes_voter_id_users')),
    sa.PrimaryKeyConstraint('voter_id', 'post_id', name='pk_post_votes')
    )
    op.create_table('comment_votes',
    sa.Column('voter_id', sa.BIGINT(), nullable=False),
    sa.Column('comment_id', sa.BIGINT(), nullable=False),
    sa.Column('vote', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], name=op.f('fk_comment_votes_comment_id_comments')),
    sa.ForeignKeyConstraint(['voter_id'], ['users.id'], name=op.f('fk_comment_votes_voter_id_users')),
    sa.PrimaryKeyConstraint('voter_id', 'comment_id', name='pk_comment_votes')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_votes')
    op.drop_table('post_votes')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comments_parent_post'))

    op.drop_table('comments')
    op.drop_table('user_subscriptions')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_posts_title'))
        batch_op.drop_index(batch_op.f('ix_posts_flair'))
        batch_op.drop_index(batch_op.f('ix_posts_author_uname'))
        batch_op.drop_index(batch_op.f('ix_posts_author_id'))

    op.drop_table('posts')
    op.drop_table('forum_rules')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('forums', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forums__name'))

    op.drop_table('forums')
    # ### end Alembic commands ###
